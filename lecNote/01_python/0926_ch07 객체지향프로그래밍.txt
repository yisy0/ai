7장 객체지향 프로그래밍
- class : 속성(변수)와 메소드(함수)를 갖는 객체를 만들기 위한 설계도
	모든 class는 Object를 상속받는다(__str__(), ..)

- class 내에서는
	생성자(생성자가 없으면 디폴트생성자 자동 생성) 및 소멸자
	인스턴스변수(일반변수) vs 클래스변수 vs static 변수
	인스턴스메소드(일반함수) vs 클래스메소드 vs static 메소드

- class 클래스명(상속받을클래스명):
	클래스변수
	__static 변수
	def __init__(self, [매개변수,..]):
		self.인스턴스변수 = 매개변수
	def __del__(self):
		객체소멸시 수행할 명령어
	def 인스턴스메소드명(self, [매개변수,..]):
		명령어
	@classmethod
	def 클래스메소드명(cls, [매개변수..]):
		cls.클래스변수와 관련된 로직(클래스명.클래스메소드명()호출)
	@staticmethod
	def static메소드명([매개변수..]):
		클래스변수나 인스턴스변수나 static변수가 없는 로직
  p = Person("홍길동","남자")

- 객체(인스턴스변수).__dict__ => 객체를 딕셔너리 형태로 보여줌
	ex. p.__dict__ => {'name':'홍길동', 'gender':'남자'}

- super() : '부모클래스의'를 의미







